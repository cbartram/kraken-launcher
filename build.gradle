
plugins {
    id 'java'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.runelite.net'
        content {
            includeGroupByRegex("net\\.runelite.*")
        }
    }
    mavenCentral()
}

def runeLiteVersion = 'latest.release'

// All dependencies for the Kraken client need to be added here since the launcher process starts the kraken client.
dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.1'
    implementation group: 'net.runelite', name:'client', version: runeLiteVersion
    implementation group: 'net.runelite', name:'jshell', version: runeLiteVersion
    implementation(group: 'com.github.oshi', name: 'oshi-core', version: '6.6.5') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }


    testImplementation 'junit:junit:4.12'
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.1'
    testImplementation group: 'net.runelite', name:'client', version: runeLiteVersion
    testImplementation group: 'net.runelite', name:'jshell', version: runeLiteVersion
}

group = 'com.kraken'
version = '1.0.3'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(11)
}

tasks.register('shadowJar', Jar) {
    dependsOn configurations.testRuntimeClasspath
    manifest {
        attributes('Main-Class': 'com.krakenlauncher.KrakenLauncher', 'Multi-Release': true)
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.output
    from sourceSets.test.output
    from {
        configurations.testRuntimeClasspath.collect { file ->
            file.isDirectory() ? file : zipTree(file)
        }
    }

    exclude 'META-INF/INDEX.LIST'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude '**/module-info.class'

    group = BasePlugin.BUILD_GROUP
    archiveClassifier.set('shadow')
    archiveFileName.set("${rootProject.name}-${project.version}-all.jar")
}
